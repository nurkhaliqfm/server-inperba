// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum StatusPerkara {
  PROSES
  PUTUS
  BANDING
  KASASI
  INKRAH
  DICABUT
  TIDAK_DAPAT_DITERIMA
  DITOLAK
  DIKABULKAN
  MENUNGGU_JADWAL_SIDANG
  ARSIP
}

model User {
  id                      Int                       @id @default(autoincrement())
  username                String                    @db.VarChar(255)
  fullname                String                    @db.VarChar(255)
  email                   String?                   @db.VarChar(255)
  kontak                  String?                   @db.VarChar(255)
  is_wa_connected         Boolean                   @default(false)
  password                String                    @db.VarChar(255)
  id_role                 Int                       @db.Int()
  foto                    String?                   @db.VarChar(255)
  createdAt               DateTime                  @default(now()) @db.Timestamp(0)
  updatedAt               DateTime                  @updatedAt @db.Timestamp(0)
  OauthAuthorizationCodes OauthAuthorizationCodes[]

  @@map("users")
}

model OauthAuthorizationCodes {
  id                  Int                 @id @default(autoincrement())
  authorization_codes String              @db.VarChar(255)
  user_agent          String?             @db.VarChar(255)
  ip_address          String?             @db.VarChar(255)
  client              String              @db.VarChar(255)
  signature           String              @db.VarChar(255)
  id_user             Int                 @db.Int
  user                User                @relation(fields: [id_user], references: [id], onDelete: Cascade)
  createdAt           DateTime            @default(now()) @db.Timestamp(0)
  updatedAt           DateTime            @updatedAt @db.Timestamp(0)
  OauthAccessTokens   OauthAccessTokens?
  OauthRefreshTokens  OauthRefreshTokens?

  @@map("oauth_authorization_codes")
}

model OauthAccessTokens {
  id                      Int                     @id @default(autoincrement())
  access_token            String                  @db.LongText
  access_token_expires_at BigInt                  @db.BigInt
  id_auth                 Int                     @unique
  authorization           OauthAuthorizationCodes @relation(fields: [id_auth], references: [id], onDelete: Cascade)
  createdAt               DateTime                @default(now()) @db.Timestamp(0)
  updatedAt               DateTime                @updatedAt @db.Timestamp(0)

  @@map("oauth_access_tokens")
}

model OauthRefreshTokens {
  id                       Int                     @id @default(autoincrement())
  refresh_token            String                  @db.LongText
  refresh_token_expires_at BigInt                  @db.BigInt
  id_auth                  Int                     @unique
  authorization            OauthAuthorizationCodes @relation(fields: [id_auth], references: [id], onDelete: Cascade)
  createdAt                DateTime                @default(now()) @db.Timestamp(0)
  updatedAt                DateTime                @updatedAt @db.Timestamp(0)

  @@map("oauth_refresh_tokens")
}

model PerkaraBanding {
  id                          Int           @id @default(autoincrement())
  kontak_wa                   String        @db.VarChar(255)
  jenis_perkara               String?       @db.VarChar(255)
  pembading                   String?       @db.VarChar(255)
  terbanding                  String?       @db.VarChar(255)
  nomor_perkara               String        @db.LongText
  tanggal_registrasi          DateTime      @db.Timestamp(0)
  status_penetapan_majelis    Boolean       @default(false)
  tanggal_penetapan_majelis   DateTime?     @db.Timestamp(0)
  status_penunjukan_panitera  Boolean       @default(false)
  tanggal_penunjukan_panitera DateTime?     @db.Timestamp(0)
  status_penetapan_sidang     Boolean       @default(false)
  tanggal_penetapan_sidang    DateTime?     @db.Timestamp(0)
  status_hari_sidang          Boolean       @default(false)
  tanggal_hari_sidang         DateTime?     @db.Timestamp(0)
  amar_putusan                String?       @db.LongText
  status_proses               StatusPerkara @default(PROSES)
  createdAt                   DateTime      @default(now()) @db.Timestamp(0)
  updatedAt                   DateTime      @updatedAt @db.Timestamp(0)

  @@map("perkara_banding")
}

model SessionOTP {
  id         Int      @id @default(autoincrement())
  kontak_wa  String   @db.VarChar(255)
  identity   String   @db.LongText
  session    String   @db.VarChar(255)
  isValidate Boolean  @default(false)
  createdAt  DateTime @default(now()) @db.Timestamp(0)
  updatedAt  DateTime @updatedAt @db.Timestamp(0)

  @@map("session_otp")
}
